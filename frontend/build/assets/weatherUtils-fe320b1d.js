class i{constructor(){const e="e14425ecde124adebf434225253009";this.config={apiKey:e,baseUrl:"https://api.weatherapi.com/v1",timeout:15e3}}async getCurrentWeather(e,a,r){try{let t=e;a&&r?t=`${e},${a},${r}`:r&&r!=="South Africa"&&(t=`${e},${r}`);const s=this.buildApiUrl("current",{q:t,aqi:"yes"}),o=await this.makeRequest(s);if(!o.ok)throw new Error(`Weather API error: ${o.status} ${o.statusText}`);const c=await o.json();if(c.error)throw new Error(`Weather API error: ${c.error.message}`);return{success:!0,data:this.transformWeatherResponse(c),message:"Weather data retrieved successfully",timestamp:new Date().toISOString()}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Unknown error occurred",message:"Failed to retrieve weather data",timestamp:new Date().toISOString()}}}async getWeatherByCoordinates(e,a){try{const r=this.buildApiUrl("current",{q:`${e},${a}`,aqi:"yes"}),t=await this.makeRequest(r);if(!t.ok)throw new Error(`Weather API error: ${t.status} ${t.statusText}`);const s=await t.json();if(s.error)throw new Error(`Weather API error: ${s.error.message}`);return{success:!0,data:this.transformWeatherResponse(s),message:"Weather data retrieved successfully",timestamp:new Date().toISOString()}}catch(r){return{success:!1,error:r instanceof Error?r.message:"Unknown error occurred",message:"Failed to retrieve weather data",timestamp:new Date().toISOString()}}}async getWeatherByIP(){try{const e=this.buildApiUrl("current",{q:"auto:ip",aqi:"yes"}),a=await this.makeRequest(e);if(!a.ok)throw new Error(`Weather API error: ${a.status} ${a.statusText}`);const r=await a.json();if(r.error)throw new Error(`Weather API error: ${r.error.message}`);return{success:!0,data:this.transformWeatherResponse(r),message:"Weather data retrieved successfully",timestamp:new Date().toISOString()}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Unknown error occurred",message:"Failed to retrieve weather data",timestamp:new Date().toISOString()}}}buildApiUrl(e,a){const r=new URL(`${this.config.baseUrl}/${e}.json`);return r.searchParams.set("key",this.config.apiKey),Object.entries(a).forEach(([t,s])=>{r.searchParams.set(t,s)}),r.toString()}async makeRequest(e){const a=new AbortController,r=setTimeout(()=>a.abort(),this.config.timeout);try{const t=await fetch(e,{method:"GET",headers:{Accept:"application/json","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"},signal:a.signal});return clearTimeout(r),t}catch(t){throw clearTimeout(r),t}}transformWeatherResponse(e){return{location:{city:e.location.name,state:e.location.region,country:e.location.country,coordinates:{latitude:e.location.lat,longitude:e.location.lon}},current:{temperature:e.current.temp_c,humidity:e.current.humidity,pressure:e.current.pressure_mb,wind_speed:e.current.wind_kph,wind_direction:e.current.wind_degree,weather_condition:e.current.condition.code.toString(),weather_description:e.current.condition.text,uv_index:e.current.uv,visibility:e.current.vis_km,cloud_cover:e.current.cloud,feels_like:e.current.feelslike_c,dew_point:e.current.dewpoint_c,precipitation_probability:Math.round(e.current.precip_mm*100),air_quality_index:e.current.air_quality?.["us-epa-index"]||0,air_quality_category:this.getAirQualityCategory(e.current.air_quality?.["us-epa-index"]||0),timestamp:e.current.last_updated}}}getAirQualityCategory(e){return e<=50?"Good":e<=100?"Moderate":e<=150?"Unhealthy for Sensitive Groups":e<=200?"Unhealthy":e<=300?"Very Unhealthy":"Hazardous"}}const l=new i,d=n=>n<=50?{label:"Good",color:"text-green-600",bg:"bg-green-100",class:"aqi-good"}:n<=100?{label:"Moderate",color:"text-yellow-600",bg:"bg-yellow-100",class:"aqi-fair"}:n<=150?{label:"Unhealthy (S)",color:"text-orange-600",bg:"bg-orange-100",class:"aqi-poor"}:n<=200?{label:"Unhealthy",color:"text-red-600",bg:"bg-red-100",class:"aqi-poor"}:{label:"Hazardous",color:"text-purple-600",bg:"bg-purple-100",class:"aqi-poor"},h=n=>{if(!n)return"☁️";switch(n){case"01d":return"☀️";case"01n":return"🌙";case"02d":return"⛅";case"02n":return"☁️";case"03d":case"03n":return"☁️";case"04d":case"04n":return"☁️";case"09d":case"09n":return"🌧️";case"10d":case"10n":return"🌧️";case"11d":case"11n":return"⛈️";case"13d":case"13n":return"❄️";case"50d":case"50n":return"🌫️";default:return"☁️"}},w=n=>{if(!n)return"Unknown";switch(n){case"01d":case"01n":return"Clear";case"02d":case"02n":return"Few Clouds";case"03d":case"03n":return"Scattered Clouds";case"04d":case"04n":return"Broken Clouds";case"09d":case"09n":return"Shower Rain";case"10d":case"10n":return"Rain";case"11d":case"11n":return"Thunderstorm";case"13d":case"13n":return"Snow";case"50d":case"50n":return"Mist";default:return"Cloudy"}};export{h as a,w as b,d as g,l as w};
